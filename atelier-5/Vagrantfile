# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
    # Configuration de la box
    
    config.vm.define "web" do |web|
      # Configuration des CPUs
     web.vm.box= "hashicorp/bionic64"
     web.vm.provider "virtualbox" do |vb|
     # Configuration des CPUs
     vb.cpus = "2"
     # Configuration du nom de la VM
     vb.name="web"
     # Configuration de la mémoire
     vb.memory = "1024"
     end
      # shell execution
      web.vm.provision "shell", inline: "sudo apt update && sudo apt install apache2 -y"
      # Port forwarding 
      web.vm.network "public_network", bridge: "eno1"
      web.vm.network "private_network", ip: "10.0.1.98"
      web.vm.network "forwarded_port", guest:80,host: 9999
      web.vm.synced_folder "/tmp/vagrant", "/var/www/html"  
    end
     config.vm.define "db" do |db|
     db.vm.box="hashicorp/bionic64"
     db.vm.provider "virtualbox" do |vb|
     # Configuration des CPUs
     vb.cpus = "2"
     # Configuration du nom de la VM
     vb.name="db"
     # Configuration de la mémoire
     vb.memory = "1024"
     end
     # shell execution
     db.vm.provision "shell", inline: "sudo apt update && sudo apt install mariadb-server -y"
     # Port forwarding
     #web.network "public_newtork", bridge: "eno1"
     db.vm.network "private_network", ip: "10.0.1.99"
     db.vm.synced_folder "/tmp/vagrant", "/var/www/html"
     end
  end

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "base"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
